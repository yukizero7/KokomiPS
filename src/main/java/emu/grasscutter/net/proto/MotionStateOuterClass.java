// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MotionState.proto

package emu.grasscutter.net.proto;

public final class MotionStateOuterClass {
  private MotionStateOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code MotionState}
   */
  public enum MotionState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MotionNone = 0;</code>
     */
    MotionNone(0),
    /**
     * <code>MotionReset = 1;</code>
     */
    MotionReset(1),
    /**
     * <code>MotionStandby = 2;</code>
     */
    MotionStandby(2),
    /**
     * <code>MotionStandbyMove = 3;</code>
     */
    MotionStandbyMove(3),
    /**
     * <code>MotionWalk = 4;</code>
     */
    MotionWalk(4),
    /**
     * <code>MotionRun = 5;</code>
     */
    MotionRun(5),
    /**
     * <code>MotionDash = 6;</code>
     */
    MotionDash(6),
    /**
     * <code>MotionClimb = 7;</code>
     */
    MotionClimb(7),
    /**
     * <code>MotionClimbJump = 8;</code>
     */
    MotionClimbJump(8),
    /**
     * <code>MotionStandbyToClimb = 9;</code>
     */
    MotionStandbyToClimb(9),
    /**
     * <code>MotionFight = 10;</code>
     */
    MotionFight(10),
    /**
     * <code>MotionJump = 11;</code>
     */
    MotionJump(11),
    /**
     * <code>MotionDrop = 12;</code>
     */
    MotionDrop(12),
    /**
     * <code>MotionFly = 13;</code>
     */
    MotionFly(13),
    /**
     * <code>MotionSwimMove = 14;</code>
     */
    MotionSwimMove(14),
    /**
     * <code>MotionSwimIdle = 15;</code>
     */
    MotionSwimIdle(15),
    /**
     * <code>MotionSwimDash = 16;</code>
     */
    MotionSwimDash(16),
    /**
     * <code>MotionSwimJump = 17;</code>
     */
    MotionSwimJump(17),
    /**
     * <code>MotionSlip = 18;</code>
     */
    MotionSlip(18),
    /**
     * <code>MotionGoUpstairs = 19;</code>
     */
    MotionGoUpstairs(19),
    /**
     * <code>MotionFallOnGround = 20;</code>
     */
    MotionFallOnGround(20),
    /**
     * <code>MotionJumpUpWallForStandby = 21;</code>
     */
    MotionJumpUpWallForStandby(21),
    /**
     * <code>MotionJumpOffWall = 22;</code>
     */
    MotionJumpOffWall(22),
    /**
     * <code>MotionPoweredFly = 23;</code>
     */
    MotionPoweredFly(23),
    /**
     * <code>MotionLadderIdle = 24;</code>
     */
    MotionLadderIdle(24),
    /**
     * <code>MotionLadderMove = 25;</code>
     */
    MotionLadderMove(25),
    /**
     * <code>MotionLadderSlip = 26;</code>
     */
    MotionLadderSlip(26),
    /**
     * <code>MotionStandbyToLadder = 27;</code>
     */
    MotionStandbyToLadder(27),
    /**
     * <code>MotionLadderToStandby = 28;</code>
     */
    MotionLadderToStandby(28),
    /**
     * <code>MotionDangerStandby = 29;</code>
     */
    MotionDangerStandby(29),
    /**
     * <code>MotionDangerStandbyMove = 30;</code>
     */
    MotionDangerStandbyMove(30),
    /**
     * <code>MotionDangerWalk = 31;</code>
     */
    MotionDangerWalk(31),
    /**
     * <code>MotionDangerRun = 32;</code>
     */
    MotionDangerRun(32),
    /**
     * <code>MotionDangerDash = 33;</code>
     */
    MotionDangerDash(33),
    /**
     * <code>MotionCrouchIdle = 34;</code>
     */
    MotionCrouchIdle(34),
    /**
     * <code>MotionCrouchMove = 35;</code>
     */
    MotionCrouchMove(35),
    /**
     * <code>MotionCrouchRoll = 36;</code>
     */
    MotionCrouchRoll(36),
    /**
     * <code>MotionNotify = 37;</code>
     */
    MotionNotify(37),
    /**
     * <code>MotionLandSpeed = 38;</code>
     */
    MotionLandSpeed(38),
    /**
     * <code>MotionMoveFailAck = 39;</code>
     */
    MotionMoveFailAck(39),
    /**
     * <code>MotionWaterfall = 40;</code>
     */
    MotionWaterfall(40),
    /**
     * <code>MotionDashBeforeShake = 41;</code>
     */
    MotionDashBeforeShake(41),
    /**
     * <code>MotionSitIdle = 42;</code>
     */
    MotionSitIdle(42),
    /**
     * <code>MotionForceSetPos = 43;</code>
     */
    MotionForceSetPos(43),
    /**
     * <code>MotionQuestForceDrag = 44;</code>
     */
    MotionQuestForceDrag(44),
    /**
     * <code>MotionFollowRoute = 45;</code>
     */
    MotionFollowRoute(45),
    /**
     * <code>MotionNum = 46;</code>
     */
    MotionNum(46),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MotionNone = 0;</code>
     */
    public static final int MotionNone_VALUE = 0;
    /**
     * <code>MotionReset = 1;</code>
     */
    public static final int MotionReset_VALUE = 1;
    /**
     * <code>MotionStandby = 2;</code>
     */
    public static final int MotionStandby_VALUE = 2;
    /**
     * <code>MotionStandbyMove = 3;</code>
     */
    public static final int MotionStandbyMove_VALUE = 3;
    /**
     * <code>MotionWalk = 4;</code>
     */
    public static final int MotionWalk_VALUE = 4;
    /**
     * <code>MotionRun = 5;</code>
     */
    public static final int MotionRun_VALUE = 5;
    /**
     * <code>MotionDash = 6;</code>
     */
    public static final int MotionDash_VALUE = 6;
    /**
     * <code>MotionClimb = 7;</code>
     */
    public static final int MotionClimb_VALUE = 7;
    /**
     * <code>MotionClimbJump = 8;</code>
     */
    public static final int MotionClimbJump_VALUE = 8;
    /**
     * <code>MotionStandbyToClimb = 9;</code>
     */
    public static final int MotionStandbyToClimb_VALUE = 9;
    /**
     * <code>MotionFight = 10;</code>
     */
    public static final int MotionFight_VALUE = 10;
    /**
     * <code>MotionJump = 11;</code>
     */
    public static final int MotionJump_VALUE = 11;
    /**
     * <code>MotionDrop = 12;</code>
     */
    public static final int MotionDrop_VALUE = 12;
    /**
     * <code>MotionFly = 13;</code>
     */
    public static final int MotionFly_VALUE = 13;
    /**
     * <code>MotionSwimMove = 14;</code>
     */
    public static final int MotionSwimMove_VALUE = 14;
    /**
     * <code>MotionSwimIdle = 15;</code>
     */
    public static final int MotionSwimIdle_VALUE = 15;
    /**
     * <code>MotionSwimDash = 16;</code>
     */
    public static final int MotionSwimDash_VALUE = 16;
    /**
     * <code>MotionSwimJump = 17;</code>
     */
    public static final int MotionSwimJump_VALUE = 17;
    /**
     * <code>MotionSlip = 18;</code>
     */
    public static final int MotionSlip_VALUE = 18;
    /**
     * <code>MotionGoUpstairs = 19;</code>
     */
    public static final int MotionGoUpstairs_VALUE = 19;
    /**
     * <code>MotionFallOnGround = 20;</code>
     */
    public static final int MotionFallOnGround_VALUE = 20;
    /**
     * <code>MotionJumpUpWallForStandby = 21;</code>
     */
    public static final int MotionJumpUpWallForStandby_VALUE = 21;
    /**
     * <code>MotionJumpOffWall = 22;</code>
     */
    public static final int MotionJumpOffWall_VALUE = 22;
    /**
     * <code>MotionPoweredFly = 23;</code>
     */
    public static final int MotionPoweredFly_VALUE = 23;
    /**
     * <code>MotionLadderIdle = 24;</code>
     */
    public static final int MotionLadderIdle_VALUE = 24;
    /**
     * <code>MotionLadderMove = 25;</code>
     */
    public static final int MotionLadderMove_VALUE = 25;
    /**
     * <code>MotionLadderSlip = 26;</code>
     */
    public static final int MotionLadderSlip_VALUE = 26;
    /**
     * <code>MotionStandbyToLadder = 27;</code>
     */
    public static final int MotionStandbyToLadder_VALUE = 27;
    /**
     * <code>MotionLadderToStandby = 28;</code>
     */
    public static final int MotionLadderToStandby_VALUE = 28;
    /**
     * <code>MotionDangerStandby = 29;</code>
     */
    public static final int MotionDangerStandby_VALUE = 29;
    /**
     * <code>MotionDangerStandbyMove = 30;</code>
     */
    public static final int MotionDangerStandbyMove_VALUE = 30;
    /**
     * <code>MotionDangerWalk = 31;</code>
     */
    public static final int MotionDangerWalk_VALUE = 31;
    /**
     * <code>MotionDangerRun = 32;</code>
     */
    public static final int MotionDangerRun_VALUE = 32;
    /**
     * <code>MotionDangerDash = 33;</code>
     */
    public static final int MotionDangerDash_VALUE = 33;
    /**
     * <code>MotionCrouchIdle = 34;</code>
     */
    public static final int MotionCrouchIdle_VALUE = 34;
    /**
     * <code>MotionCrouchMove = 35;</code>
     */
    public static final int MotionCrouchMove_VALUE = 35;
    /**
     * <code>MotionCrouchRoll = 36;</code>
     */
    public static final int MotionCrouchRoll_VALUE = 36;
    /**
     * <code>MotionNotify = 37;</code>
     */
    public static final int MotionNotify_VALUE = 37;
    /**
     * <code>MotionLandSpeed = 38;</code>
     */
    public static final int MotionLandSpeed_VALUE = 38;
    /**
     * <code>MotionMoveFailAck = 39;</code>
     */
    public static final int MotionMoveFailAck_VALUE = 39;
    /**
     * <code>MotionWaterfall = 40;</code>
     */
    public static final int MotionWaterfall_VALUE = 40;
    /**
     * <code>MotionDashBeforeShake = 41;</code>
     */
    public static final int MotionDashBeforeShake_VALUE = 41;
    /**
     * <code>MotionSitIdle = 42;</code>
     */
    public static final int MotionSitIdle_VALUE = 42;
    /**
     * <code>MotionForceSetPos = 43;</code>
     */
    public static final int MotionForceSetPos_VALUE = 43;
    /**
     * <code>MotionQuestForceDrag = 44;</code>
     */
    public static final int MotionQuestForceDrag_VALUE = 44;
    /**
     * <code>MotionFollowRoute = 45;</code>
     */
    public static final int MotionFollowRoute_VALUE = 45;
    /**
     * <code>MotionNum = 46;</code>
     */
    public static final int MotionNum_VALUE = 46;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MotionState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MotionState forNumber(int value) {
      switch (value) {
        case 0: return MotionNone;
        case 1: return MotionReset;
        case 2: return MotionStandby;
        case 3: return MotionStandbyMove;
        case 4: return MotionWalk;
        case 5: return MotionRun;
        case 6: return MotionDash;
        case 7: return MotionClimb;
        case 8: return MotionClimbJump;
        case 9: return MotionStandbyToClimb;
        case 10: return MotionFight;
        case 11: return MotionJump;
        case 12: return MotionDrop;
        case 13: return MotionFly;
        case 14: return MotionSwimMove;
        case 15: return MotionSwimIdle;
        case 16: return MotionSwimDash;
        case 17: return MotionSwimJump;
        case 18: return MotionSlip;
        case 19: return MotionGoUpstairs;
        case 20: return MotionFallOnGround;
        case 21: return MotionJumpUpWallForStandby;
        case 22: return MotionJumpOffWall;
        case 23: return MotionPoweredFly;
        case 24: return MotionLadderIdle;
        case 25: return MotionLadderMove;
        case 26: return MotionLadderSlip;
        case 27: return MotionStandbyToLadder;
        case 28: return MotionLadderToStandby;
        case 29: return MotionDangerStandby;
        case 30: return MotionDangerStandbyMove;
        case 31: return MotionDangerWalk;
        case 32: return MotionDangerRun;
        case 33: return MotionDangerDash;
        case 34: return MotionCrouchIdle;
        case 35: return MotionCrouchMove;
        case 36: return MotionCrouchRoll;
        case 37: return MotionNotify;
        case 38: return MotionLandSpeed;
        case 39: return MotionMoveFailAck;
        case 40: return MotionWaterfall;
        case 41: return MotionDashBeforeShake;
        case 42: return MotionSitIdle;
        case 43: return MotionForceSetPos;
        case 44: return MotionQuestForceDrag;
        case 45: return MotionFollowRoute;
        case 46: return MotionNum;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MotionState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MotionState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MotionState>() {
            public MotionState findValueByNumber(int number) {
              return MotionState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.MotionStateOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final MotionState[] VALUES = values();

    public static MotionState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MotionState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MotionState)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021MotionState.proto*\353\007\n\013MotionState\022\016\n\nM" +
      "otionNone\020\000\022\017\n\013MotionReset\020\001\022\021\n\rMotionSt" +
      "andby\020\002\022\025\n\021MotionStandbyMove\020\003\022\016\n\nMotion" +
      "Walk\020\004\022\r\n\tMotionRun\020\005\022\016\n\nMotionDash\020\006\022\017\n" +
      "\013MotionClimb\020\007\022\023\n\017MotionClimbJump\020\010\022\030\n\024M" +
      "otionStandbyToClimb\020\t\022\017\n\013MotionFight\020\n\022\016" +
      "\n\nMotionJump\020\013\022\016\n\nMotionDrop\020\014\022\r\n\tMotion" +
      "Fly\020\r\022\022\n\016MotionSwimMove\020\016\022\022\n\016MotionSwimI" +
      "dle\020\017\022\022\n\016MotionSwimDash\020\020\022\022\n\016MotionSwimJ" +
      "ump\020\021\022\016\n\nMotionSlip\020\022\022\024\n\020MotionGoUpstair" +
      "s\020\023\022\026\n\022MotionFallOnGround\020\024\022\036\n\032MotionJum" +
      "pUpWallForStandby\020\025\022\025\n\021MotionJumpOffWall" +
      "\020\026\022\024\n\020MotionPoweredFly\020\027\022\024\n\020MotionLadder" +
      "Idle\020\030\022\024\n\020MotionLadderMove\020\031\022\024\n\020MotionLa" +
      "dderSlip\020\032\022\031\n\025MotionStandbyToLadder\020\033\022\031\n" +
      "\025MotionLadderToStandby\020\034\022\027\n\023MotionDanger" +
      "Standby\020\035\022\033\n\027MotionDangerStandbyMove\020\036\022\024" +
      "\n\020MotionDangerWalk\020\037\022\023\n\017MotionDangerRun\020" +
      " \022\024\n\020MotionDangerDash\020!\022\024\n\020MotionCrouchI" +
      "dle\020\"\022\024\n\020MotionCrouchMove\020#\022\024\n\020MotionCro" +
      "uchRoll\020$\022\020\n\014MotionNotify\020%\022\023\n\017MotionLan" +
      "dSpeed\020&\022\025\n\021MotionMoveFailAck\020\'\022\023\n\017Motio" +
      "nWaterfall\020(\022\031\n\025MotionDashBeforeShake\020)\022" +
      "\021\n\rMotionSitIdle\020*\022\025\n\021MotionForceSetPos\020" +
      "+\022\030\n\024MotionQuestForceDrag\020,\022\025\n\021MotionFol" +
      "lowRoute\020-\022\r\n\tMotionNum\020.B\033\n\031emu.grasscu" +
      "tter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
